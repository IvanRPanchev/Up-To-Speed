// JAVA CODE 

package com.example.electr0.firststeps;

import android.content.ActivityNotFoundException;
import android.content.Context;
import android.content.Intent;
import android.net.Uri;
import android.os.AsyncTask;
import android.speech.RecognizerIntent;
import android.speech.tts.TextToSpeech;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.telephony.TelephonyManager;
import android.telephony.gsm.GsmCellLocation;
import android.util.Log;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.TextView;
import android.widget.Toast;
import com.google.android.gms.appindexing.Action;
import com.google.android.gms.appindexing.AppIndex;
import com.google.android.gms.common.api.GoogleApiClient;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.Socket;
import java.net.UnknownHostException;
import java.util.ArrayList;
import java.util.List;
import java.util.Locale;
import java.util.Scanner;

public class MainActivity extends AppCompatActivity implements TextToSpeech.OnInitListener {

    //from old project
    Context context;

    private final int REQ_CODE_SPEECH_INPUT = 100;
    private int port = 5500;
    private TextView txtSpeechInput;
    private ImageButton btnSpeak;
    private TextToSpeech tts;
    private Button toSpeechBtn;

    // boolean exitThread=true;
    String speakingWords = "Aloohaaa";
    String voiceText = "temp";
    String quitCase = "exit";


    //to new project

    private TextView gsmInfoView;
    private TextView serverInfoView;


    String gsmInfo = "";
    String phoneNum = "0895772331";
    /**
     * ATTENTION: This was auto-generated to implement the App Indexing API.
     * See https://g.co/AppIndexing/AndroidStudio for more information.
     */
    private GoogleApiClient client;


    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        gsmInfoView = (TextView) findViewById(R.id.gsmInfo);
        serverInfoView = (TextView) findViewById(R.id.serverInfo);

        TelephonyManager telephonyManager = (TelephonyManager) getSystemService(Context.TELEPHONY_SERVICE);
        GsmCellLocation cellLocation = (GsmCellLocation) telephonyManager.getCellLocation();

        String IMEINumber = telephonyManager.getDeviceId();
        String subscriberID = telephonyManager.getDeviceId();
        String SIMSerialNumber = telephonyManager.getSimSerialNumber();
        String networkCountryISO = telephonyManager.getNetworkCountryIso();
        String SIMCountryISO = telephonyManager.getSimCountryIso();
        String softwareVersion = telephonyManager.getDeviceSoftwareVersion();
        String voiceMailNumber = telephonyManager.getVoiceMailNumber();
        String number = telephonyManager.getLine1Number();
        String operatoprName = telephonyManager.getNetworkOperatorName();
        String MCC = telephonyManager.getNetworkOperator();
        String strphoneType = "";
        int cellid = cellLocation.getCid();
        int lac = cellLocation.getLac();
        int mcc = Integer.parseInt(MCC.substring(0, 3));


        int phoneType = telephonyManager.getPhoneType();

        switch (phoneType) {
            case (TelephonyManager.PHONE_TYPE_CDMA):
                strphoneType = "CDMA";
                break;
            case (TelephonyManager.PHONE_TYPE_GSM):
                strphoneType = "GSM";
                break;
            case (TelephonyManager.PHONE_TYPE_NONE):
                strphoneType = "NONE";
                break;
        }


        String gsmInfo = "Phone Details:\n";
        gsmInfo += "\n PhoneNumber:" + number;
        gsmInfo += "\n Cell tower ID:" + cellid;
        gsmInfo += "\n LAC :" + lac;
        gsmInfo += "\n MCC:" + mcc;
        gsmInfo += "\n Operator name:" + operatoprName;
        gsmInfo += "\n IMEI Number:" + IMEINumber;
        gsmInfo += "\n SubscriberID:" + subscriberID;
        gsmInfo += "\n Sim Serial Number:" + SIMSerialNumber;
        gsmInfo += "\n Network Country ISO:" + networkCountryISO;
        gsmInfo += "\n SIM Country ISO:" + SIMCountryISO;
        gsmInfo += "\n Software Version:" + softwareVersion;
        gsmInfo += "\n Voice Mail Number:" + voiceMailNumber;
        gsmInfo += "\n Phone Network Type:" + strphoneType;

        gsmInfoView.setText(gsmInfo);

        Clients myClient = new Clients("192.168.0.102", port, serverInfoView, String.valueOf(cellid), phoneNum);
        myClient.execute();


        //from old project

//        txtSpeechInput = ((TextView)findViewById(R.id.txtSpeechInput));
//        btnSpeak = ((ImageButton)findViewById(R.id.btnSpeak));
//        tts = new TextToSpeech(this, this);
//        toSpeechBtn = ((Button)findViewById(R.id.toSpeech));
//
//        speakingWords = convo.getText().toString();
//
//
//        toSpeechBtn.setOnClickListener(new View.OnClickListener()
//        {
//            public void onClick(View v)
//            {
//                speakingWords = convo.getText().toString();
//                speakOut();
//            }
//        });
//
//
//        btnSpeak.setOnClickListener(new View.OnClickListener()
//        {
//            public void onClick(View v)
//            {
//                promptSpeechInput();
//            }
//        });
//
//
//        setVoiceTextBut.setOnClickListener(new View.OnClickListener()
//        {
//            public void onClick(View v)
//            {
//                message.setText(MainActivity.this.voiceText);
//            }
//        });
//
//
//        sendToServBut.setOnClickListener(new View.OnClickListener()
//        {
//            public void onClick(View v)
//            {
//                status.setText("Try to connect... to port 5500");
//
//
//                Clients myClient = new Clients("10.0.204.124", port, convo, 0);
//                Worker goWork = new Worker(convo);
//                goWork.run();
//
//            }
//
//        });
//
//        status.setText("Worker is working");


        // ATTENTION: This was auto-generated to implement the App Indexing API.
        // See https://g.co/AppIndexing/AndroidStudio for more information.
        client = new GoogleApiClient.Builder(this).addApi(AppIndex.API).build();
    }


    //CONNECTION TO SERVER

    public class Clients extends AsyncTask<Void, Void, Void> {

        String dstAddress;
        int dstPort;
        String response = "";
        String endCheck = "";
        TextView serverInfoView = null;
        String cellTowerID;
        String clientNum;


        Clients(String addr, int port, TextView serverInfoView, String cellTowerID, String clientNum) {
            dstAddress = addr;
            dstPort = port;
            this.serverInfoView = serverInfoView;
            this.cellTowerID = cellTowerID;
            this.clientNum = clientNum;
        }


        @Override
        protected Void doInBackground(Void... arg0) {

            Socket connection = null;
            Scanner socketIn = null;
            PrintWriter socketOut = null;


            try {

                connection = new Socket(dstAddress, dstPort);
                socketIn = new Scanner(new BufferedReader(new InputStreamReader(connection.getInputStream())));
                socketOut = new PrintWriter(connection.getOutputStream(), true);

                socketOut.println(clientNum);       //Send phone number
                socketOut.flush();

                socketOut.println(cellTowerID);    // send tower id
                socketOut.flush();


                while (true) {

                    endCheck = socketIn.nextLine();

                    if (endCheck.equals("end")) {
                        break;
                    }

                    response += endCheck;

                }


            } catch (UnknownHostException e) {

                e.printStackTrace();
                response = "UnknownHostException: " + e.toString();
            } catch (IOException e) {

                e.printStackTrace();
                response = "IOException: " + e.toString();
            } finally {
                if (connection != null) {
                    try {
                        connection.close();
                    } catch (IOException e) {

                        e.printStackTrace();
                    }
                }
            }
            return null;
        }

        @Override
        protected void onPostExecute(Void result) {

            serverInfoView.setText(response);

            super.onPostExecute(result);

        }

    }


    //TEXT TO SPEECH

    private void speakOut() {
        
        this.tts.speak(speakingWords, 0, null);
        
    }

    @Override
    public void onInit(int status) {

        if (status == TextToSpeech.SUCCESS) {

            int result = tts.setLanguage(Locale.US);

            if (result == TextToSpeech.LANG_MISSING_DATA || result == TextToSpeech.LANG_NOT_SUPPORTED) {

                Log.e("TTS", "This Language is not supported");

            } else {

                btnSpeak.setEnabled(true);
                speakOut();

            }

        } else {
            Log.e("TTS", "Initilization Failed!");
        }

    }


    public void onDestroy() {
        if (this.tts != null) {
            this.tts.stop();
            this.tts.shutdown();
        }
        super.onDestroy();
    }

//     SPEECH TO TEXT

    private void promptSpeechInput(){

        Intent intent = new Intent(RecognizerIntent.ACTION_RECOGNIZE_SPEECH);
        intent.putExtra(RecognizerIntent.EXTRA_LANGUAGE_MODEL,RecognizerIntent.LANGUAGE_MODEL_FREE_FORM);
        intent.putExtra(RecognizerIntent.EXTRA_LANGUAGE, Locale.getDefault());
        intent.putExtra(RecognizerIntent.EXTRA_PROMPT, getString(R.string.speech_prompt));

        try{
            startActivityForResult(intent,REQ_CODE_SPEECH_INPUT);
        }catch(ActivityNotFoundException a){
            Toast.makeText(getApplicationContext(),getString(R.string.speech_not_supported),
                    Toast.LENGTH_SHORT).show();
        }

    }


    protected void onActivityResult(int requestCode, int resultCode, Intent data) {

        super.onActivityResult(requestCode, resultCode, data);

        switch (requestCode) {
            case REQ_CODE_SPEECH_INPUT: {
                if (resultCode == RESULT_OK && null != data) {

                    ArrayList<String> result = data.getStringArrayListExtra(RecognizerIntent.EXTRA_RESULTS);
                    
                    txtSpeechInput.setText(result.get(0));
                    voiceText = (result.get(0));
                    
                }
                break;
            }

        }

    }


}



//MAIN XML CODE 

<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:paddingBottom="@dimen/activity_vertical_margin"
    android:paddingLeft="@dimen/activity_horizontal_margin"
    android:paddingRight="@dimen/activity_horizontal_margin"
    android:paddingTop="@dimen/activity_vertical_margin"
    tools:context="com.example.electr0.firststeps.MainActivity">

    <TextView
        android:id="@+id/cellidTextView"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Hello World!" />

    <TextView
        android:id="@+id/lacTextView"
        android:layout_marginTop="50dp"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Hello World!" />

    <TextView
        android:id="@+id/mccTextView"
        android:layout_marginTop="100dp"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Hello World!" />

    <TextView
        android:id="@+id/oprTextView"
        android:layout_marginTop="150dp"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Hello World!" />

    <TextView
        android:id="@+id/neighboursTextView"
        android:layout_marginTop="200dp"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Hello World!" />



</RelativeLayout>




//MAINFEST CODE 

<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.example.electr0.firststeps">
    <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION" />

    <application
        android:allowBackup="true"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:supportsRtl="true"
        android:theme="@style/AppTheme">
        <activity android:name=".MainActivity">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
    </application>

</manifest>





